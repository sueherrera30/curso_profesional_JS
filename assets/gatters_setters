DUDAS: podemos llamar igual a la propiedad virtual??? como set y get muted??



funciones que se pueden usar dentro de objetos y que nos permiten tener propiedades virtuales, 
es decir la propiedad no existe ditectamente en el objeto, pero atraves de un 
getter o setter podemos correr una funcion que va a calcular estos valores 
o va a usar un valor para establecer un nuevo valor.

EN EL MEDIAPLAYER, en la funcion initPlugins, tnego acceso a todos, pero que padsa si por ahora se pasa this, pero que tal que queremos hacer un control de datos,
y solo pcoer acceder a uno solo.                         

para ello, creamos un variable con un objeto, va a tener funciones  con las acciones, play, pause.
lo nombramos player, 
si yo entonces, llamo a player en lugar the this en initPlugins,ya ningu plugin tendra acceso 
a totalplay, a mute etc, eso nos da control.

 MediaPlayer.prototype.initPlugins = function (){ 
     // dentro de funcion hacemos objeto, este va a recibir funciones.
     const player = {
         play: () => this.play(),
         pause: () => this.pause(),
         get muted() {
             return this.media.muted;
         }

     }
    this.plugins.forEach(plugin => {
        plugin.run(this)      // aqui antes this, ahora player                            
    }); 

    empezamos a crear una propiedad virtual, usamos GET  para referirnos a getter seguido de  LA PROPIEDAD VIRTUAL.
    aqui un lio con this, cuando llamemos muted, lo haremos atrav√©s de player, like:  this.muted()
    y dijimos que this, representa  el objeto que esta haciendo la llamada...
    asi que debemos tener tambien a media.
    en funcion autioplayer en lugar de aplicarlo directasmente el mute, vamos a hacer uan condicional.

    ahora usamos un setter para pasarle true o false, si n oesta muteado lo queremos hacer muted,
    SET  mas propuedad virtual.
    los setter NO LOS LLAMAMOS COMO SI FUERAN UNA FUNCION ya que simplemente son un valor virtual que pudieramos asignarle un valorv
    y este valor es el que se va a recibir en objeto player.